generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  email      String?
  profilePic String?
  gitHubId   String    @unique
  PrevImgs   Image[]
  Preview    Preview[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Order      Order[]
}

model Image {
  uploadId String @id @unique
  url      String
  userId   Int?
  user     User?  @relation(fields: [userId], references: [id])
}

model Preview {
  id       Int     @id @default(autoincrement())
  img      String
  product  String
  position Float[]
  scale    Float[]
  color    String
  userId   Int?
  user     User?   @relation(fields: [userId], references: [id])
  order    Order[]
}

enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

model Order {
  id              String      @id @default(cuid())
  configurationId Int
  configuration   Preview     @relation(fields: [configurationId], references: [id])
  userId          Int?
  user            User?       @relation(fields: [userId], references: [id])
  amount          Float
  isPaid          Boolean     @default(false)
  status          OrderStatus @default(awaiting_shipment)

  shippingAddressId String?
  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])

  billingAddressId String?
  billingAddress   BillingAddress? @relation(fields: [billingAddressId], references: [id])
  createdAd        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postlCode   String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postlCode   String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}
